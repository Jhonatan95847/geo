group 'co.com.colcomercio.alkosto'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.serenity-gradle-plugin'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:4.0.30"
        classpath "net.serenity-bdd:serenity-single-page-report:4.0.30"
    }
}

ext {
    serenity_version = '4.1.12'
    junit_platform_launcher_version="1.10.2"
    cucumber_junit_platform_engine_version="7.16.1"
    junit_platform_suite_version="1.10.2"
    junit_jupiter_engine_version="5.10.2"
    junit_vintage_engine_version="5.10.2"
    logback_classic_version="1.2.10"
    assertj_core_version="3.23.1"
}

dependencies {
    // Appium Java Client
    implementation 'io.appium:java-client:8.5.1'
    // Selenium dependency
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.9.1'

    // JUnit 5 dependencies
    implementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'

    // Serenity dependencies
    testImplementation "net.serenity-bdd:serenity-core:${serenity_version}"
    testImplementation "net.serenity-bdd:serenity-cucumber:${serenity_version}"

    // JUnit Platform dependencies
    testImplementation "org.junit.platform:junit-platform-launcher:${junit_platform_launcher_version}"
    testImplementation "io.cucumber:cucumber-junit-platform-engine:${cucumber_junit_platform_engine_version}"
    testImplementation "org.junit.platform:junit-platform-suite:${junit_platform_suite_version}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junit_jupiter_engine_version}"
    testImplementation "org.junit.vintage:junit-vintage-engine:${junit_vintage_engine_version}"

    // Other dependencies
    implementation "ch.qos.logback:logback-classic:${logback_classic_version}"
    testImplementation "org.assertj:assertj-core:${assertj_core_version}"
    implementation "net.serenity-bdd:serenity-screenplay:${serenity_version}"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:${serenity_version}"
    implementation "net.serenity-bdd:serenity-screenplay-rest:${serenity_version}"
    implementation "net.serenity-bdd:serenity-ensure:${serenity_version}"
    implementation group: 'javax.mail', name: 'mail', version: '1.4.7'
    implementation 'com.google.code.gson:gson:2.10.1'
    testImplementation 'io.rest-assured:json-schema-validator:5.3.1'
    implementation group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'

    // Lombok dependencies
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

    // Other test dependencies
    testImplementation 'org.slf4j:slf4j-simple:1.7.7'
    testImplementation 'org.hamcrest:hamcrest-core:1.3'
    implementation "com.oracle.database.jdbc:ojdbc8:19.18.0.0"
    implementation group: 'com.jcraft', name: 'jsch', version: '0.1.55'
    // Dependencias de Log4j 2
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
    // Dependencia opcional para la integración con SLF4J
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.19.0'
    //guardar datos en json
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
    // Appium Java Client
    implementation 'io.appium:java-client:8.5.1'

    // OCR Library (Tesseract)
    implementation 'net.sourceforge.tess4j:tess4j:5.7.0'

    // Logging
    implementation 'org.slf4j:slf4j-simple:2.0.9'

    //Open CV
    implementation group: 'org.openpnp', name: 'opencv', version: '4.7.0-0'

}

tasks.withType(Test).configureEach {
    maxParallelForks = 5 // Define el número de navegadores para ejecución paralela
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

serenity {
    reports = ["single-page-html"]
}

tasks.withType(Test).configureEach {
    useJUnitPlatform {
        excludeEngines 'cucumber'
    }
    systemProperties = System.properties as Map<String, ?>
}